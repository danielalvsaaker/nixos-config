# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, inputs, lib, pkgs, modulesPath, ... }:

{
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  security.polkit.enable = true;

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/760deaec-cd70-4da8-b6f4-44e7a52cbe5a";
      fsType = "ext4";
    };

  boot.initrd.luks.devices."luks-b7176a70-5349-4981-b46d-54ab7a2201a5".device = "/dev/disk/by-uuid/b7176a70-5349-4981-b46d-54ab7a2201a5";

  fileSystems."/boot/efi" =
    {
      device = "/dev/disk/by-uuid/59CD-6E03";
      fsType = "vfat";
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/91e623c7-084f-4d8b-8c32-187141ba77c9"; }];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  # high-resolution display
  hardware.video.hidpi.enable = lib.mkDefault true;
  hardware.opengl = {
    enable = true;
    driSupport = true;
  };
}
